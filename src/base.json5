{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "c",
	"scopeName": "source.c",
	"patterns": [
    { "include": "#comment" },
    { "include": "#constant" },
    { "include": "#entity" },
    { "include": "#invalid" },
    { "include": "#keyword" },
    { "include": "#meta" },
    { "include": "#operator" },
    { "include": "#punctuation" },
    { "include": "#storage" },
    { "include": "#string" },
    { "include": "#support" },
    { "include": "#type" },
    { "include": "#variable" },
  ],
  "repository":{
    "line_continuation_character": {
			"patterns": [
				{
					"match": "(\\\\)\\n",
					"captures": {"1": {"name": "constant.character.escape.line-continuation.c"}}
				}
			]
		},
    "string_escaped_char": {
			"patterns": [
				{
					"match": "(?x)\\\\ (\n\\\\             |\n[abefnprtv'\"?]   |\n[0-3]\\d{,2}     |\n[4-7]\\d?        |\nx[a-fA-F0-9]{,2} |\nu[a-fA-F0-9]{,4} |\nU[a-fA-F0-9]{,8} )",
					"name": "constant.character.escape.c"
				},
				{
					"match": "\\\\.",
					"name": "invalid.illegal.unknown-escape.c"
				}
			]
		},
		"string_placeholder": {
			"patterns": [
				{
					"match": "(?x) %\n(\\d+\\$)?                           # field (argument #)\n[#0\\- +']*                          # flags\n[,;:_]?                              # separator character (AltiVec)\n((-?\\d+)|\\*(-?\\d+\\$)?)?          # minimum field width\n(\\.((-?\\d+)|\\*(-?\\d+\\$)?)?)?    # precision\n(hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)? # length modifier\n[diouxXDOUeEfFgGaACcSspn%]           # conversion type",
					"name": "constant.other.placeholder.c"
				},
				{
					"match": "(%)(?!\"\\s*(PRI|SCN))",
					"captures": {"1": {"name": "invalid.illegal.placeholder.c"}}
				}
			]
		},
  },
}
